{
    "openapi": "3.0.3",
    "info": {
        "title": "Catena-X Core Managed Identity Wallets API",
        "version": "2.0.0",
        "description": "Catena-X Core Managed Identity Wallets API",
        "termsOfService": "https://www.catena-x.net/",
        "contact": {
            "name": "Catena-X Core Agile Release Train",
            "url": "https://www.catena-x.net/",
            "email": "info@catena-x.net"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://github.com/catenax-ng/product-core-managed-identity-wallets/blob/develop/LICENSE"
        }
    },
    "servers": [
        {
            "url": "http://localhost:8080",
            "description": "Local Dev Environment"
        }
    ],
    "paths": {
        "/api/wallets": {
            "get": {
                "tags": [
                    "Wallets"
                ],
                "summary": "List of wallets",
                "description": "Permission: **view_wallets**\n\nRetrieve list of registered wallets",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of wallets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/WalletDto"
                                    },
                                    "maxItems": 999,
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request could not be completed due to a forbidden access.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request could not be completed due to a failed authorization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                          "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExceptionResponse"
                            }
                          }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Wallets"
                ],
                "summary": "Create wallet",
                "description": "Permission: **add_wallets**\n\nCreate a wallet and store it ",
                "parameters": [],
                "requestBody": {
                    "description": "wallet to create",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WalletCreateDto"
                            },
                            "examples": {
                                "demo": {
                                    "value": {
                                        "bpn": "name",
                                        "name": "bpn"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Wallet was successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletDto"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "name": "name",
                                            "bpn": "bpn",
                                            "did": "did",
                                            "verKey": "verkey",
                                            "createdAt": "2022-09-17T14:31:47.056108748",
                                            "vcs": []
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The input does not comply to the syntax requirements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The request could not be completed due to a conflict.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request could not be completed due to a forbidden access.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request could not be completed due to a failed authorization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                          "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExceptionResponse"
                            }
                          }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/wallets/{identifier}": {
            "get": {
                "tags": [
                    "Wallets"
                ],
                "summary": "Retrieve wallet by identifier",
                "description": "Permission: **view_wallets** OR **view_wallet** (The BPN of Wallet to retrieve must equal the BPN of caller)\n\nRetrieve single wallet by identifier, with or without its credentials",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "deprecated": false,
                        "examples": {
                            "did": {
                                "value": "did:example:0123"
                            },
                            "bpn": {
                                "value": "bpn123"
                            }
                        }
                    },
                    {
                        "name": "withCredentials",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        },
                        "required": true,
                        "deprecated": false,
                        "examples": {
                            "withCredentials": {
                                "value": "false"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The wallet",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletDto"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "name": "name",
                                            "bpn": "bpn",
                                            "did": "did",
                                            "createdAt": "2022-09-17T14:31:47.056263746",
                                            "vcs": []
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The input does not comply to the syntax requirements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The required entity does not exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request could not be completed due to a forbidden access.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request could not be completed due to a failed authorization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                          "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExceptionResponse"
                            }
                          }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Wallets"
                ],
                "summary": "Remove wallet",
                "description": "Permission: **delete_wallets**\n\nRemove hosted wallet",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Wallet successfully removed!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "Wallet successfully removed!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The required entity does not exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The input does not comply to the syntax requirements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request could not be completed due to a forbidden access.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request could not be completed due to a failed authorization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                          "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExceptionResponse"
                            }
                          }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/wallets/{identifier}/credentials": {
            "post": {
                "tags": [
                    "Wallets"
                ],
                "summary": "Store Verifiable Credential",
                "description": "Permission: **update_wallets** OR **update_wallet** (The BPN of wallet to extract credentials from must equal BPN of caller)\n\nStore a verifiable credential in the wallet of the given identifier",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "deprecated": false,
                        "examples": {
                            "did": {
                                "value": "did:exp:123"
                            },
                            "bpn": {
                                "value": "BPN123"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "description": "The verifiable credential to be stored",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IssuedVerifiableCredentialRequestDto"
                            },
                            "examples": {
                                "demo": {
                                    "value": {
                                        "id": "http://example.edu/credentials/3732",
                                        "@context": [
                                            "https://www.w3.org/2018/credentials/v1",
                                            "https://www.w3.org/2018/credentials/examples/v1"
                                        ],
                                        "type": [
                                            "University-Degree-Credential, VerifiableCredential"
                                        ],
                                        "issuer": "did:example:76e12ec712ebc6f1c221ebfeb1f",
                                        "issuanceDate": "2019-06-16T18:56:59Z",
                                        "expirationDate": "2019-06-17T18:56:59Z",
                                        "credentialSubject": {
                                            "college": "Test-University"
                                        },
                                        "credentialStatus": {
                                            "id": "http://example.edu/api/credentials/status/test#3",
                                            "type": "StatusList2021Entry",
                                            "statusPurpose": "revocation",
                                            "statusListIndex": "3",
                                            "statusListCredential": "http://example.edu/api/credentials/status/test"
                                        },
                                        "proof": {
                                            "type": "Ed25519Signature2018",
                                            "created": "2021-11-17T22:20:27Z",
                                            "proofPurpose": "assertionMethod",
                                            "verificationMethod": "did:example:76e12ec712ebc6f1c221ebfeb1f#key-1",
                                            "jws": "eyJiNjQiOmZhbHNlLCJjcml0IjpbImI2NCJdLCJhbGciOiJFZERTQSJ9..JNerzfrK46Mq4XxYZEnY9xOK80xsEaWCLAHuZsFie1-NTJD17wWWENn_DAlA_OwxGF5dhxUJ05P6Dm8lcmF5Cg"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Success message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "Credential with id http://example.edu/credentials/3732has been successfully stored"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The input can not be processed due to semantic mismatches",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The required entity does not exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request could not be completed due to a forbidden access.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request could not be completed due to a failed authorization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                          "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExceptionResponse"
                            }
                          }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/wallets/{identifier}/public": {
            "post": {
                "tags": [
                    "Wallets"
                ],
                "summary": "Register on Public Chain",
                "description": "Permission: **update_wallets**\n\nRegister wallet DID on the public chain, endpoint only available for the base wallet",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "deprecated": false,
                        "examples": {
                            "did": {
                                "value": "did:exp:123"
                            },
                            "bpn": {
                                "value": "BPN123"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "description": "VerKey",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerKeyDto"
                            },
                            "examples": {
                                "demo": {
                                    "value": {
                                        "verKey": "VERIFICATION_KEY_AFTER_CREATION"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Success message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "Wallet has been successfully registered on chain"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The input can not be processed due to semantic mismatches",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The required entity does not exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request could not be completed due to a forbidden access.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request could not be completed due to a failed authorization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                          "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExceptionResponse"
                            }
                          }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/businessPartnerDataRefresh": {
            "post": {
                "tags": [
                    "BusinessPartnerData"
                ],
                "summary": "Pull business partner data from BPDM and issue or update verifiable credentials",
                "description": "Permission: **update_wallets** OR **update_wallet** (The BPN of wallet to update must equal BPN of caller) \n\nPull business partner data from BPDM and issueor update related verifiable credentials. To update a specific wallet give its identifier as a query parameter.",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "required": false,
                        "deprecated": false,
                        "examples": {
                            "did": {
                                "value": "did:example:0123"
                            },
                            "bpn": {
                                "value": "bpn123"
                            }
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Empty response body",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request could not be completed due to a forbidden access.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request could not be completed due to a failed authorization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/didDocuments/{identifier}": {
            "get": {
                "tags": [
                    "DIDDocument"
                ],
                "summary": "Resolve DID Document",
                "description": "Resolve the DID document for a given DID or BPN",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "deprecated": false,
                        "examples": {
                            "did": {
                                "value": "did:exp:123"
                            },
                            "bpn": {
                                "value": "BPN123"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The resolved DID Document",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DidDocumentDto"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "id": "did:example:76e12ec712ebc6f1c221ebfeb1f",
                                            "@context": [
                                                "https://www.w3.org/ns/did/v1"
                                            ],
                                            "controller": [
                                                "123",
                                                "1231"
                                            ],
                                            "verificationMethod": [
                                                {
                                                    "id": "did:example:76e12ec712ebc6f1c221ebfeb1f#key-1",
                                                    "type": "Ed25519VerificationKey2018",
                                                    "controller": "did:example:76e12ec712ebc6f1c221ebfeb1f",
                                                    "publicKeyBase58": "FyfKP2HvTKqDZQzvyL38yXH7bExmwofxHf2NR5BrcGf1"
                                                }
                                            ],
                                            "service": [
                                                {
                                                    "id": "did:example:123#edv",
                                                    "type": "ServiceEndpointProxyService",
                                                    "serviceEndpoint": "https://myservice.com/myendpoint"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The required entity does not exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The input does not comply to the syntax requirements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                          "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExceptionResponse"
                            }
                          }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/didDocuments/{identifier}/services": {
            "post": {
                "tags": [
                    "DIDDocument"
                ],
                "summary": "Add New Service Endpoint",
                "description": "Permission: **update_wallets**\n\nAdd a new service endpoint to the DID Document",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "deprecated": false,
                        "examples": {
                            "did": {
                                "value": "did:exp:123"
                            },
                            "bpn": {
                                "value": "BPN123"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "description": "The Service endpoint",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DidServiceDto"
                            },
                            "examples": {
                                "demo": {
                                    "value": {
                                        "id": "did:example:123#edv",
                                        "type": "ServiceEndpointProxyService",
                                        "serviceEndpoint": "https://myservice.com/myendpoint"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resolved DID Document after adding the new Service",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DidDocumentDto"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "id": "did:example:76e12ec712ebc6f1c221ebfeb1f",
                                            "@context": [
                                                "https://www.w3.org/ns/did/v1"
                                            ],
                                            "controller": [
                                                "123",
                                                "1231"
                                            ],
                                            "verificationMethod": [
                                                {
                                                    "id": "did:example:76e12ec712ebc6f1c221ebfeb1f#key-1",
                                                    "type": "Ed25519VerificationKey2018",
                                                    "controller": "did:example:76e12ec712ebc6f1c221ebfeb1f",
                                                    "publicKeyBase58": "FyfKP2HvTKqDZQzvyL38yXH7bExmwofxHf2NR5BrcGf1"
                                                }
                                            ],
                                            "service": [
                                                {
                                                    "id": "did:example:123#edv",
                                                    "type": "ServiceEndpointProxyService",
                                                    "serviceEndpoint": "https://myservice.com/myendpoint"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The required entity does not exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The input does not comply to the syntax requirements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                          "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExceptionResponse"
                            }
                          }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/didDocuments/{identifier}/services/{id}": {
            "put": {
                "tags": [
                    "DIDDocument"
                ],
                "summary": "Update an existing Service Endpoint",
                "description": "Permission: **update_wallets**\n\nUpdate the service endpoint in the DID Document based on its id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "deprecated": false,
                        "examples": {
                            "id": {
                                "value": "did:example:123#edv"
                            }
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "deprecated": false,
                        "examples": {
                            "did": {
                                "value": "did:exp:123"
                            },
                            "bpn": {
                                "value": "BPN123"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "description": "The updated service endpoint data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DidServiceUpdateRequestDto"
                            },
                            "examples": {
                                "demo": {
                                    "value": {
                                        "type": "ServiceEndpointProxyService",
                                        "serviceEndpoint": "https://myservice.com/myendpoint"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resolved DID Document after the updating the Service",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DidDocumentDto"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "id": "did:example:76e12ec712ebc6f1c221ebfeb1f",
                                            "@context": [
                                                "https://www.w3.org/ns/did/v1"
                                            ],
                                            "controller": [
                                                "123",
                                                "1231"
                                            ],
                                            "verificationMethod": [
                                                {
                                                    "id": "did:example:76e12ec712ebc6f1c221ebfeb1f#key-1",
                                                    "type": "Ed25519VerificationKey2018",
                                                    "controller": "did:example:76e12ec712ebc6f1c221ebfeb1f",
                                                    "publicKeyBase58": "FyfKP2HvTKqDZQzvyL38yXH7bExmwofxHf2NR5BrcGf1"
                                                }
                                            ],
                                            "service": [
                                                {
                                                    "id": "did:example:123#edv",
                                                    "type": "ServiceEndpointProxyService",
                                                    "serviceEndpoint": "https://myservice.com/myendpoint"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The required entity does not exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The input can not be processed due to semantic mismatches",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The input does not comply to the syntax requirements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request could not be completed due to a forbidden access.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request could not be completed due to a failed authorization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                          "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExceptionResponse"
                            }
                          }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "DIDDocument"
                ],
                "summary": "Remove Service Endpoint",
                "description": "Permission: **update_wallets**\n\nRemove service endpoint in DID Document based on its id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "deprecated": false,
                        "examples": {
                            "id": {
                                "value": "did:example:123#edv"
                            }
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "deprecated": false,
                        "examples": {
                            "did": {
                                "value": "did:exp:123"
                            },
                            "bpn": {
                                "value": "BPN123"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The resolved DID Document after removing the service",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DidDocumentDto"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "id": "did:example:76e12ec712ebc6f1c221ebfeb1f",
                                            "@context": [
                                                "https://www.w3.org/ns/did/v1"
                                            ],
                                            "controller": "test",
                                            "verificationMethod": [
                                                {
                                                    "id": "did:example:76e12ec712ebc6f1c221ebfeb1f#key-1",
                                                    "type": "Ed25519VerificationKey2018",
                                                    "controller": "did:example:76e12ec712ebc6f1c221ebfeb1f",
                                                    "publicKeyBase58": "FyfKP2HvTKqDZQzvyL38yXH7bExmwofxHf2NR5BrcGf1"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The required entity does not exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The input can not be processed due to semantic mismatches",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The input does not comply to the syntax requirements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request could not be completed due to a forbidden access.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request could not be completed due to a failed authorization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                          "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExceptionResponse"
                            }
                          }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/credentials": {
            "get": {
                "tags": [
                    "VerifiableCredentials"
                ],
                "summary": "Query Verifiable Credentials",
                "description": "Permission: **view_wallets** OR **view_wallet** (The BPN of holderIdentifier must equal BPN of caller)\n\nSearch verifiable credentials with filter criteria",
                "parameters": [
                    {
                        "name": "holderIdentifier",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "deprecated": false,
                        "examples": {
                            "holderIdentifierDid": {
                                "value": "did:example:4567"
                            },
                            "holderIdentifierBPN": {
                                "value": "BPN4567"
                            }
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "deprecated": false,
                        "examples": {
                            "id": {
                                "value": "http://example.edu/credentials/3732"
                            }
                        }
                    },
                    {
                        "name": "issuerIdentifier",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "deprecated": false,
                        "examples": {
                            "issuerIdentifierDid": {
                                "value": "did:example:0123"
                            },
                            "issuerIdentifierBPN": {
                                "value": "BPN0123"
                            }
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "maxItems": 999,
                            "type": "array"
                        },
                        "required": true,
                        "deprecated": false,
                        "examples": {
                            "type": {
                                "value": "['University-Degree-Credential']"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of verifiable credentials matching the query, empty if no match found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/VerifiableCredentialDto"
                                    },
                                    "maxItems": 999,
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request could not be completed due to a forbidden access.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request could not be completed due to a failed authorization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                          "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExceptionResponse"
                            }
                          }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "VerifiableCredentials"
                ],
                "summary": "Issue Verifiable Credential",
                "description": "Permission: **update_wallets** OR **update_wallet** (The BPN of the issuer of the Verifiable Credential must equal BPN of caller)\n\nIssue a verifiable credential with a given issuer DID",
                "parameters": [],
                "requestBody": {
                    "description": "The verifiable credential input data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifiableCredentialRequestDto"
                            },
                            "examples": {
                                "demo": {
                                    "value": {
                                        "id": "http://example.edu/credentials/3732",
                                        "@context": [
                                            "https://www.w3.org/2018/credentials/v1",
                                            "https://www.w3.org/2018/credentials/examples/v1"
                                        ],
                                        "type": [
                                            "University-Degree-Credential, VerifiableCredential"
                                        ],
                                        "issuerIdentifier": "did:example:76e12ec712ebc6f1c221ebfeb1f",
                                        "issuanceDate": "2019-06-16T18:56:59Z",
                                        "expirationDate": "2019-06-17T18:56:59Z",
                                        "credentialSubject": {
                                            "college": "Test-University"
                                        },
                                        "holderIdentifier": "did:example:492edf208",
                                        "isRevocable": true
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "The created Verifiable Credential",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VerifiableCredentialDto"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "id": "http://example.edu/credentials/3732",
                                            "@context": [
                                                "https://www.w3.org/2018/credentials/v1",
                                                "https://www.w3.org/2018/credentials/examples/v1"
                                            ],
                                            "type": [
                                                "University-Degree-Credential, VerifiableCredential"
                                            ],
                                            "issuer": "did:example:76e12ec712ebc6f1c221ebfeb1f",
                                            "issuanceDate": "2019-06-16T18:56:59Z",
                                            "expirationDate": "2019-06-17T18:56:59Z",
                                            "credentialSubject": {
                                                "college": "Test-University"
                                            },
                                            "credentialStatus": {
                                                "id": "https://example.com/credentials/status/3#94567",
                                                "type": "StatusList2021Entry",
                                                "statusPurpose": "revocation",
                                                "statusListIndex": "94567",
                                                "statusListCredential": "https://example.com/credentials/status/3"
                                            },
                                            "proof": {
                                                "type": "Ed25519Signature2018",
                                                "created": "2021-11-17T22:20:27Z",
                                                "proofPurpose": "assertionMethod",
                                                "verificationMethod": "did:example:76e12ec712ebc6f1c221ebfeb1f#key-1",
                                                "jws": "eyJiNjQiOmZhbHNlLCJjcml0IjpbImI2NCJdLCJhbGciOiJFZERTQSJ9..JNerzfrK46Mq4XxYZEnY9xOK80xsEaWCLAHuZsFie1-NTJD17wWWENn_DAlA_OwxGF5dhxUJ05P6Dm8lcmF5Cg"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The input can not be processed due to semantic mismatches",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The input does not comply to the syntax requirements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request could not be completed due to a forbidden access.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request could not be completed due to a failed authorization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                          "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExceptionResponse"
                            }
                          }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/credentials/issuer": {
            "post": {
                "tags": [
                    "VerifiableCredentials"
                ],
                "summary": "Issue a Verifiable Credential with Catena-X platform issuer",
                "description": "Permission: **update_wallets** OR **update_wallet** (The BPN of Catena-X wallet must equal BPN of caller)\n\nIssue a verifiable credential by Catena-X wallet",
                "parameters": [],
                "requestBody": {
                    "description": "The verifiable credential input",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifiableCredentialRequestWithoutIssuerDto"
                            },
                            "examples": {
                                "demo": {
                                    "value": {
                                        "id": "http://example.edu/credentials/3732",
                                        "@context": [
                                            "https://www.w3.org/2018/credentials/v1",
                                            "https://www.w3.org/2018/credentials/examples/v1"
                                        ],
                                        "type": [
                                            "University-Degree-Credential, VerifiableCredential"
                                        ],
                                        "issuanceDate": "2019-06-16T18:56:59Z",
                                        "expirationDate": "2019-06-17T18:56:59Z",
                                        "credentialSubject": {
                                            "college": "Test-University"
                                        },
                                        "holderIdentifier": "did:example:492edf208",
                                        "isRevocable": true
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "The created Verifiable Credential",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VerifiableCredentialDto"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "id": "http://example.edu/credentials/3732",
                                            "@context": [
                                                "https://www.w3.org/2018/credentials/v1",
                                                "https://www.w3.org/2018/credentials/examples/v1"
                                            ],
                                            "type": [
                                                "University-Degree-Credential, VerifiableCredential"
                                            ],
                                            "issuer": "did:example:76e12ec712ebc6f1c221ebfeb1f",
                                            "issuanceDate": "2019-06-16T18:56:59Z",
                                            "expirationDate": "2019-06-17T18:56:59Z",
                                            "credentialSubject": {
                                                "college": "Test-University"
                                            },
                                            "credentialStatus": {
                                                "id": "https://example.com/credentials/status/3#94567",
                                                "type": "StatusList2021Entry",
                                                "statusPurpose": "revocation",
                                                "statusListIndex": "94567",
                                                "statusListCredential": "https://example.com/credentials/status/3"
                                            },
                                            "proof": {
                                                "type": "Ed25519Signature2018",
                                                "created": "2021-11-17T22:20:27Z",
                                                "proofPurpose": "assertionMethod",
                                                "verificationMethod": "did:example:76e12ec712ebc6f1c221ebfeb1f#key-1",
                                                "jws": "eyJiNjQiOmZhbHNlLCJjcml0IjpbImI2NCJdLCJhbGciOiJFZERTQSJ9..JNerzfrK46Mq4XxYZEnY9xOK80xsEaWCLAHuZsFie1-NTJD17wWWENn_DAlA_OwxGF5dhxUJ05P6Dm8lcmF5Cg"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The input can not be processed due to semantic mismatches",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The input does not comply to the syntax requirements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request could not be completed due to a forbidden access.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request could not be completed due to a failed authorization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                          "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExceptionResponse"
                            }
                          }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/credentials/revocations": {
            "post": {
                "tags": [
                    "VerifiableCredentials"
                ],
                "summary": "Revoke issued Verifiable Credential",
                "description": "Permission: **update_wallets** OR **update_wallet** (The BPN of the issuer of the Verifiable Credential must equal BPN of caller)\n\nRevoke issued Verifiable Credential by issuer",
                "parameters": [],
                "requestBody": {
                    "description": "The signed verifiable credential",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifiableCredentialDto"
                            },
                            "examples": {
                                "demo": {
                                    "value": {
                                        "id": "http://example.edu/credentials/3732",
                                        "@context": [
                                            "https://www.w3.org/2018/credentials/v1",
                                            "https://www.w3.org/2018/credentials/examples/v1"
                                        ],
                                        "type": [
                                            "University-Degree-Credential, VerifiableCredential"
                                        ],
                                        "issuer": "did:example:76e12ec712ebc6f1c221ebfeb1f",
                                        "issuanceDate": "2019-06-16T18:56:59Z",
                                        "expirationDate": "2019-06-17T18:56:59Z",
                                        "credentialSubject": {
                                            "college": "Test-University"
                                        },
                                        "credentialStatus": {
                                            "id": "https://example.com/credentials/status/3#94567",
                                            "type": "StatusList2021Entry",
                                            "statusPurpose": "revocation",
                                            "statusListIndex": "94567",
                                            "statusListCredential": "https://example.com/credentials/status/3"
                                        },
                                        "proof": {
                                            "type": "Ed25519Signature2018",
                                            "created": "2021-11-17T22:20:27Z",
                                            "proofPurpose": "assertionMethod",
                                            "verificationMethod": "did:example:76e12ec712ebc6f1c221ebfeb1f#key-1",
                                            "jws": "eyJiNjQiOmZhbHNlLCJjcml0IjpbImI2NCJdLCJhbGciOiJFZERTQSJ9..JNerzfrK46Mq4XxYZEnY9xOK80xsEaWCLAHuZsFie1-NTJD17wWWENn_DAlA_OwxGF5dhxUJ05P6Dm8lcmF5Cg"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Empty response body",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The input can not be processed due to semantic mismatches",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The input does not comply to the syntax requirements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request could not be completed due to a forbidden access.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request could not be completed due to a failed authorization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                          "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExceptionResponse"
                            }
                          }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/credentials/revocations/statusListCredentialRefresh": {
            "post": {
                "tags": [
                    "VerifiableCredentials"
                ],
                "summary": "Re-issue the Status-List Credential for all or given wallet",
                "description": "Permission: **update_wallets** OR**update_wallet** (The BPN of wallet to update must equal BPN of caller) \n\nRe-issue the Status-List Credential for all registered wallet",
                "parameters": [
                    {
                        "name": "force",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "nullable": true
                        },
                        "required": false,
                        "deprecated": false
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "required": false,
                        "deprecated": false,
                        "examples": {
                            "identifier": {
                                "value": "BPN0001"
                            }
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Empty response body",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The input can not be processed due to semantic mismatches",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The input does not comply to the syntax requirements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request could not be completed due to a forbidden access.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request could not be completed due to a failed authorization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                          "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExceptionResponse"
                            }
                          }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/credentials/status/{listName}": {
            "get": {
                "tags": [
                    "VerifiableCredentials"
                ],
                "summary": "Query Status-List Credentials",
                "description": "Get the Status-List Credential for a given listName",
                "parameters": [
                    {
                        "name": "listName",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "deprecated": false,
                        "examples": {
                            "listName": {
                                "value": "5cb9ce19-9a10-48fe-bfa6-384632b89dc3"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Verifiable Credential",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VerifiableCredentialDto"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "id": "https://example.com/api/credentials/status/5c145c85-8fcb-42d4-893c-d19a55581e00",
                                            "@context": [
                                                "https://www.w3.org/2018/credentials/v1",
                                                "https://w3id.org/vc/status-list/2021/v1"
                                            ],
                                            "type": [
                                                "VerifiableCredential",
                                                "StatusList2021Credential"
                                            ],
                                            "issuer": "did:indy:local:test:Ae49DuXZy2PLBjSL9W2V2i",
                                            "issuanceDate": "2022-08-31T07:19:36Z",
                                            "credentialSubject": {
                                                "id": "https://example.com/api/credentials/status/5c145c85-8fcb-42d4-893c-d19a55581e00#list",
                                                "type": "StatusList2021",
                                                "statusPurpose": "revocation",
                                                "encodedList": "H4sIAAAAAAAAAO3BIQEAAAACIAf4f68zLEADAAAAAAAAAAAAAAAAAAAAvA3HJiyHAEAAAA=="
                                            },
                                            "proof": {
                                                "type": "Ed25519Signature2018",
                                                "created": "2022-08-31T07:19:42Z",
                                                "proofPurpose": "assertionMethod",
                                                "verificationMethod": "did:indy:local:test:Ae49DuXZy2PLBjSL9W2V2i#key-1",
                                                "jws": "eyJhbGciOiAiRWREU0EiLCAiYjY0IjogZmFsc2UsICJjcml0IjogWyJiNjQiXX0..0FB66o-WAn8W4qnNK0NsHBFMJj_ZM42ADdbwYO-P8oGywaYWeBPZylgD35AV2-CR0b5Hs8uDq0EIn8iHycjmBQ"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                          "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExceptionResponse"
                            }
                          }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/presentations": {
            "post": {
                "tags": [
                    "VerifiablePresentations"
                ],
                "summary": "Create Verifiable Presentation",
                "description": "Permission: **update_wallets** OR **update_wallet** (The BPN of the issuer of the Verifiable Presentation must equal to BPN of caller)\n\nCreate a verifiable presentation from a list of verifiable credentials, signed by the holder",
                "parameters": [
                    {
                        "name": "withCredentialsDateValidation",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        },
                        "required": false,
                        "deprecated": false,
                        "examples": {
                            "withCredentialsDateValidation": {
                                "value": "false"
                            }
                        }
                    },
                    {
                        "name": "withCredentialsValidation",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        },
                        "required": false,
                        "deprecated": false,
                        "examples": {
                            "withCredentialsValidation": {
                                "value": "false"
                            }
                        }
                    },
                    {
                        "name": "withRevocationValidation",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        },
                        "required": false,
                        "deprecated": false,
                        "examples": {
                            "withRevocationValidation": {
                                "value": "false"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "description": "The verifiable presentation input data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifiablePresentationRequestDto"
                            },
                            "examples": {
                                "demo": {
                                    "value": {
                                        "holderIdentifier": "did:example:76e12ec712ebc6f1c221ebfeb1f",
                                        "verifiableCredentials": [
                                            {
                                                "id": "http://example.edu/credentials/333",
                                                "@context": [
                                                    "https://www.w3.org/2018/credentials/v1",
                                                    "https://www.w3.org/2018/credentials/examples/v1"
                                                ],
                                                "type": [
                                                    "University-Degree-Credential, VerifiableCredential"
                                                ],
                                                "issuer": "did:example:76e12ec712ebc6f1c221ebfeb1f",
                                                "issuanceDate": "2019-06-16T18:56:59Z",
                                                "expirationDate": "2019-06-17T18:56:59Z",
                                                "credentialSubject": {
                                                    "college": "Test-University"
                                                },
                                                "proof": {
                                                    "type": "Ed25519Signature2018",
                                                    "created": "2021-11-17T22:20:27Z",
                                                    "proofPurpose": "assertionMethod",
                                                    "verificationMethod": "did:example:76e12ec712ebc6f1c221ebfeb1f#keys-1",
                                                    "jws": "eyJiNjQiOmZhbHNlLCJjcml0IjpbImI2NCJdLCJhbGciOiJFZERTQSJ9..JNerzfrK46Mq4XxYZEnY9xOK80xsEaWCLAHuZsFie1-NTJD17wWWENn_DAlA_OwxGF5dhxUJ05P6Dm8lcmF5Cg"
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "The created verifiable presentation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VerifiablePresentationDto"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "@context": [
                                                "https://www.w3.org/2018/credentials/v1"
                                            ],
                                            "type": [
                                                "VerifiablePresentation"
                                            ],
                                            "holder": "did:example:76e12ec712ebc6f1c221ebfeb1f",
                                            "verifiableCredential": [
                                                {
                                                    "id": "http://example.edu/credentials/3732",
                                                    "@context": [
                                                        "https://www.w3.org/2018/credentials/v1",
                                                        "https://www.w3.org/2018/credentials/examples/v1"
                                                    ],
                                                    "type": [
                                                        "University-Degree-Credential, VerifiableCredential"
                                                    ],
                                                    "issuer": "did:example:76e12ec712ebc6f1c221ebfeb1f",
                                                    "issuanceDate": "2019-06-16T18:56:59Z",
                                                    "expirationDate": "2019-06-17T18:56:59Z",
                                                    "credentialSubject": {
                                                        "college": "Test-University"
                                                    },
                                                    "proof": {
                                                        "type": "Ed25519Signature2018",
                                                        "created": "2021-11-17T22:20:27Z",
                                                        "proofPurpose": "assertionMethod",
                                                        "verificationMethod": "did:example:76e12ec712ebc6f1c221ebfeb1f#key-1",
                                                        "jws": "eyJiNjQiOmZhbHNlLCJjcml0IjpbImI2NCJdLCJhbGciOiJFZERTQSJ9..JNerzfrK46Mq4XxYZEnY9xOK80xsEaWCLAHuZsFie1-NTJD17wWWENn_DAlA_OwxGF5dhxUJ05P6Dm8lcmF5Cg"
                                                    }
                                                }
                                            ],
                                            "proof": {
                                                "type": "Ed25519Signature2018",
                                                "created": "2021-11-17T22:20:27Z",
                                                "proofPurpose": "assertionMethod",
                                                "verificationMethod": "did:example:76e12ec712ebc6f1c221ebfeb1f#key-1",
                                                "jws": "eyJiNjQiOmZhbHNlLCJjcml0IjpbImI2NCJdLCJhbGciOiJFZERTQSJ9..JNerzfrK46Mq4XxYZEnY9xOK80xsEaWCLAHuZsFie1-NTJD17wWWENn_DAlA_OwxGF5dhxUJ05P6Dm8lcmF5Cg"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The input can not be processed due to semantic mismatches",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request could not be completed due to a forbidden access.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request could not be completed due to a failed authorization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                          "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExceptionResponse"
                            }
                          }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/presentations/validation": {
            "post": {
                "tags": [
                    "VerifiablePresentations"
                ],
                "summary": "Validate Verifiable Presentation",
                "description": "Permission: **view_wallets** OR **view_wallet**\n\nValidate Verifiable Presentation with all included credentials",
                "parameters": [
                    {
                        "name": "withDateValidation",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false,
                            "nullable": true
                        },
                        "required": false,
                        "deprecated": false,
                        "examples": {
                            "withDateValidation": {
                                "value": "false"
                            }
                        }
                    },
                    {
                        "name": "withRevocationValidation",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        },
                        "required": false,
                        "deprecated": false,
                        "examples": {
                            "withRevocationValidation": {
                                "value": "false"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "description": "The verifiable presentation to validate",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifiablePresentationDto"
                            },
                            "examples": {
                                "demo": {
                                    "value": {
                                        "@context": [
                                            "https://www.w3.org/2018/credentials/v1"
                                        ],
                                        "type": [
                                            "VerifiablePresentation"
                                        ],
                                        "holder": "did:example:76e12ec712ebc6f1c221ebfeb1f",
                                        "verifiableCredential": [
                                            {
                                                "id": "http://example.edu/credentials/3732",
                                                "@context": [
                                                    "https://www.w3.org/2018/credentials/v1",
                                                    "https://www.w3.org/2018/credentials/examples/v1"
                                                ],
                                                "type": [
                                                    "University-Degree-Credential, VerifiableCredential"
                                                ],
                                                "issuer": "did:example:76e12ec712ebc6f1c221ebfeb1f",
                                                "issuanceDate": "2019-06-16T18:56:59Z",
                                                "expirationDate": "2019-06-17T18:56:59Z",
                                                "credentialSubject": {
                                                    "college": "Test-University"
                                                },
                                                "proof": {
                                                    "type": "Ed25519Signature2018",
                                                    "created": "2021-11-17T22:20:27Z",
                                                    "proofPurpose": "assertionMethod",
                                                    "verificationMethod": "did:example:76e12ec712ebc6f1c221ebfeb1f#key-1",
                                                    "jws": "eyJiNjQiOmZhbHNlLCJjcml0IjpbImI2NCJdLCJhbGciOiJFZERTQSJ9..JNerzfrK46Mq4XxYZEnY9xOK80xsEaWCLAHuZsFie1-NTJD17wWWENn_DAlA_OwxGF5dhxUJ05P6Dm8lcmF5Cg"
                                                }
                                            }
                                        ],
                                        "proof": {
                                            "type": "Ed25519Signature2018",
                                            "created": "2021-11-17T22:20:27Z",
                                            "proofPurpose": "assertionMethod",
                                            "verificationMethod": "did:example:76e12ec712ebc6f1c221ebfeb1f#key-1",
                                            "jws": "eyJiNjQiOmZhbHNlLCJjcml0IjpbImI2NCJdLCJhbGciOiJFZERTQSJ9..JNerzfrK46Mq4XxYZEnY9xOK80xsEaWCLAHuZsFie1-NTJD17wWWENn_DAlA_OwxGF5dhxUJ05P6Dm8lcmF5Cg"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The verification value",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VerifyResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "valid": true,
                                            "vp": {
                                                "@context": [
                                                    "https://www.w3.org/2018/credentials/v1"
                                                ],
                                                "type": [
                                                    "VerifiablePresentation"
                                                ],
                                                "holder": "did:example:76e12ec712ebc6f1c221ebfeb1f",
                                                "verifiableCredential": [
                                                    {
                                                        "id": "http://example.edu/credentials/3732",
                                                        "@context": [
                                                            "https://www.w3.org/2018/credentials/v1",
                                                            "https://www.w3.org/2018/credentials/examples/v1"
                                                        ],
                                                        "type": [
                                                            "University-Degree-Credential, VerifiableCredential"
                                                        ],
                                                        "issuer": "did:example:76e12ec712ebc6f1c221ebfeb1f",
                                                        "issuanceDate": "2019-06-16T18:56:59Z",
                                                        "expirationDate": "2019-06-17T18:56:59Z",
                                                        "credentialSubject": {
                                                            "college": "Test-University"
                                                        },
                                                        "proof": {
                                                            "type": "Ed25519Signature2018",
                                                            "created": "2021-11-17T22:20:27Z",
                                                            "proofPurpose": "assertionMethod",
                                                            "verificationMethod": "did:example:76e12ec712ebc6f1c221ebfeb1f#key-1",
                                                            "jws": "eyJiNjQiOmZhbHNlLCJjcml0IjpbImI2NCJdLCJhbGciOiJFZERTQSJ9..JNerzfrK46Mq4XxYZEnY9xOK80xsEaWCLAHuZsFie1-NTJD17wWWENn_DAlA_OwxGF5dhxUJ05P6Dm8lcmF5Cg"
                                                        }
                                                    }
                                                ],
                                                "proof": {
                                                    "type": "Ed25519Signature2018",
                                                    "created": "2021-11-17T22:20:27Z",
                                                    "proofPurpose": "assertionMethod",
                                                    "verificationMethod": "did:example:76e12ec712ebc6f1c221ebfeb1f#key-1",
                                                    "jws": "eyJiNjQiOmZhbHNlLCJjcml0IjpbImI2NCJdLCJhbGciOiJFZERTQSJ9..JNerzfrK46Mq4XxYZEnY9xOK80xsEaWCLAHuZsFie1-NTJD17wWWENn_DAlA_OwxGF5dhxUJ05P6Dm8lcmF5Cg"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The input can not be processed due to semantic mismatches",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The input does not comply to the syntax requirements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request could not be completed due to a forbidden access.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request could not be completed due to a failed authorization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                          "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExceptionResponse"
                            }
                          }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/list-credential/{profileName}/issue": {
            "post": {
                "tags": [
                    "VerifiableCredentials"
                ],
                "summary": "Issue a List Status credential",
                "description": "This endpoint is called by the revocation service to issue a list status credential for a given profileName",
                "parameters": [],
                "requestBody": {
                    "description": "The subject of the status list credential",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ListCredentialRequestData"
                            },
                            "examples": {
                                "demo": {
                                    "value": {
                                        "id": "uuid-of-list",
                                        "subject": {
                                            "id": "https://example.com/status/3#list",
                                            "type": "StatusList2021",
                                            "statusPurpose": "revocation",
                                            "encodedList": "H4sIAAAAAAAAA-3BMQEAAADCoPVPbQwfoAAAAAAAAAAAAAAAAAAAAIC3AYbSVKsAQAAA"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "The created verifiable credential",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                    "demo": {
                                        "value": "credential-as-string"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The input can not be processed due to semantic mismatches",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The input does not comply to the syntax requirements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExceptionResponse"
                                },
                                "examples": {
                                    "demo": {
                                        "value": {
                                            "message": "reason",
                                            "error": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                          "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExceptionResponse"
                            }
                          }
                        }
                    }
                },
                "deprecated": false
            }
        }
    },
    "components": {
        "schemas": {
            "WalletDto": {
                "properties": {
                    "bpn": {
                        "type": "string"
                    },
                    "createdAt": {
                        "$ref": "#/components/schemas/LocalDateTime"
                    },
                    "did": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "revocationListName": {
                        "type": "string",
                        "nullable": true
                    },
                    "vcs": {
                        "items": {
                            "$ref": "#/components/schemas/VerifiableCredentialDto"
                        },
                        "maxItems": 999,
                        "type": "array"
                    },
                    "verKey": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "name",
                    "bpn",
                    "did",
                    "createdAt",
                    "vcs"
                ],
                "type": "object"
            },
            "LocalDateTime": {
                "properties": {
                    "date": {
                        "$ref": "#/components/schemas/LocalDate"
                    },
                    "time": {
                        "$ref": "#/components/schemas/LocalTime"
                    }
                },
                "type": "object"
            },
            "LocalDate": {
                "properties": {
                    "year": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "month": {
                        "$ref": "#/components/schemas/Short"
                    },
                    "day": {
                        "$ref": "#/components/schemas/Short"
                    }
                },
                "type": "object"
            },
            "Short": {
                "properties": {},
                "type": "object"
            },
            "LocalTime": {
                "properties": {
                    "hour": {
                        "$ref": "#/components/schemas/Short"
                    },
                    "minute": {
                        "$ref": "#/components/schemas/Short"
                    },
                    "second": {
                        "$ref": "#/components/schemas/Short"
                    },
                    "nano": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Byte": {
                "properties": {},
                "type": "object"
            },
            "VerifiableCredentialDto": {
                "properties": {
                    "@context": {
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 999,
                        "type": "array"
                    },
                    "credentialStatus": {
                        "$ref": "#/components/schemas/CredentialStatus"
                    },
                    "credentialSubject": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Any"
                        },
                        "type": "object"
                    },
                    "expirationDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "issuanceDate": {
                        "type": "string"
                    },
                    "issuer": {
                        "type": "string"
                    },
                    "proof": {
                        "$ref": "#/components/schemas/LdProofDto"
                    },
                    "type": {
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 999,
                        "type": "array"
                    }
                },
                "required": [
                    "@context",
                    "type",
                    "issuer",
                    "issuanceDate",
                    "credentialSubject"
                ],
                "type": "object"
            },
            "CredentialStatus": {
                "properties": {
                    "credentialType": {
                        "type": "string"
                    },
                    "index": {
                        "type": "string"
                    },
                    "listUrl": {
                        "type": "string"
                    },
                    "statusId": {
                        "type": "string"
                    },
                    "statusPurpose": {
                        "type": "string"
                    }
                },
                "required": [
                    "statusId",
                    "index",
                    "listUrl"
                ],
                "type": "object"
            },
            "Any": {
                "properties": {},
                "type": "object"
            },
            "LdProofDto": {
                "properties": {
                    "challenge": {
                        "type": "string",
                        "nullable": true
                    },
                    "created": {
                        "type": "string"
                    },
                    "creator": {
                        "type": "string",
                        "nullable": true
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true
                    },
                    "jws": {
                        "type": "string",
                        "nullable": true
                    },
                    "nonce": {
                        "type": "string",
                        "nullable": true
                    },
                    "proofPurpose": {
                        "type": "string"
                    },
                    "proofValue": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string"
                    },
                    "verificationMethod": {
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "created",
                    "proofPurpose",
                    "verificationMethod"
                ],
                "type": "object"
            },
            "ExceptionResponse": {
                "properties": {
                    "error": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "message"
                ],
                "type": "object"
            },
            "WalletCreateDto": {
                "properties": {
                    "bpn": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "bpn",
                    "name"
                ],
                "type": "object"
            },
            "SuccessResponse": {
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "message"
                ],
                "type": "object"
            },
            "IssuedVerifiableCredentialRequestDto": {
                "properties": {
                    "@context": {
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 999,
                        "type": "array"
                    },
                    "CredentialStatus": {
                        "$ref": "#/components/schemas/CredentialStatus"
                    },
                    "credentialSubject": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Any"
                        },
                        "type": "object"
                    },
                    "expirationDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "issuanceDate": {
                        "type": "string"
                    },
                    "issuer": {
                        "type": "string"
                    },
                    "proof": {
                        "$ref": "#/components/schemas/LdProofDto"
                    },
                    "type": {
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 999,
                        "type": "array"
                    }
                },
                "required": [
                    "@context",
                    "type",
                    "issuer",
                    "issuanceDate",
                    "credentialSubject",
                    "CredentialStatus",
                    "proof"
                ],
                "type": "object"
            },
            "VerKeyDto": {
                "properties": {
                    "verKey": {
                        "type": "string"
                    }
                },
                "required": [
                    "verKey"
                ],
                "type": "object"
            },
            "DidDocumentDto": {
                "properties": {
                    "alsoKnownAs": {
                        "type": "string",
                        "nullable": true
                    },
                    "assertionMethodVerificationMethods": {
                        "items": {
                            "$ref": "#/components/schemas/Any"
                        },
                        "maxItems": 999,
                        "type": "array"
                    },
                    "authenticationVerificationMethods": {
                        "items": {
                            "$ref": "#/components/schemas/Any"
                        },
                        "maxItems": 999,
                        "type": "array"
                    },
                    "capabilityDelegationVerificationMethods": {
                        "items": {
                            "$ref": "#/components/schemas/Any"
                        },
                        "maxItems": 999,
                        "type": "array"
                    },
                    "capabilityInvocationVerificationMethods": {
                        "items": {
                            "$ref": "#/components/schemas/Any"
                        },
                        "maxItems": 999,
                        "type": "array"
                    },
                    "context": {
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 999,
                        "type": "array"
                    },
                    "controller": {
                        "$ref": "#/components/schemas/Short"
                    },
                    "id": {
                        "type": "string"
                    },
                    "keyAgreementVerificationMethods": {
                        "items": {
                            "$ref": "#/components/schemas/Any"
                        },
                        "maxItems": 999,
                        "type": "array"
                    },
                    "services": {
                        "items": {
                            "$ref": "#/components/schemas/DidServiceDto"
                        },
                        "maxItems": 999,
                        "type": "array"
                    },
                    "verificationMethods": {
                        "items": {
                            "$ref": "#/components/schemas/DidVerificationMethodDto"
                        },
                        "maxItems": 999,
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "context"
                ],
                "type": "object"
            },
            "DidServiceDto": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "priority": {
                        "format": "int32",
                        "type": "integer",
                        "nullable": true
                    },
                    "recipientKeys": {
                        "items": {
                            "type": "string",
                            "nullable": true
                        },
                        "maxItems": 999,
                        "type": "array"
                    },
                    "routingKeys": {
                        "items": {
                            "type": "string",
                            "nullable": true
                        },
                        "maxItems": 999,
                        "type": "array"
                    },
                    "serviceEndpoint": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "type",
                    "serviceEndpoint"
                ],
                "type": "object"
            },
            "DidVerificationMethodDto": {
                "properties": {
                    "controller": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "publicKeyBase58": {
                        "type": "string",
                        "nullable": true
                    },
                    "publicKeyBase64": {
                        "type": "string",
                        "nullable": true
                    },
                    "publicKeyHex": {
                        "type": "string",
                        "nullable": true
                    },
                    "publicKeyJwk": {
                        "$ref": "#/components/schemas/PublicKeyJwkDto"
                    },
                    "publicKeyMultibase": {
                        "type": "string",
                        "nullable": true
                    },
                    "publicKeyPem": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "type",
                    "controller"
                ],
                "type": "object"
            },
            "PublicKeyJwkDto": {
                "properties": {
                    "additionalAttributes": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Any"
                        },
                        "type": "object"
                    },
                    "alg": {
                        "type": "string",
                        "nullable": true
                    },
                    "crv": {
                        "type": "string",
                        "nullable": true
                    },
                    "keyOps": {
                        "items": {
                            "type": "string",
                            "nullable": true
                        },
                        "maxItems": 999,
                        "type": "array"
                    },
                    "kid": {
                        "type": "string",
                        "nullable": true
                    },
                    "kty": {
                        "type": "string"
                    },
                    "use": {
                        "type": "string",
                        "nullable": true
                    },
                    "x": {
                        "type": "string",
                        "nullable": true
                    },
                    "y": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "kty"
                ],
                "type": "object"
            },
            "DidServiceUpdateRequestDto": {
                "properties": {
                    "serviceEndpoint": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "serviceEndpoint"
                ],
                "type": "object"
            },
            "VerifiableCredentialRequestDto": {
                "properties": {
                    "@context": {
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 999,
                        "type": "array"
                    },
                    "credentialSubject": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Any"
                        },
                        "type": "object"
                    },
                    "expirationDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "holderIdentifier": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "isRevocable": {
                        "type": "boolean"
                    },
                    "issuanceDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "issuerIdentifier": {
                        "type": "string"
                    },
                    "type": {
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 999,
                        "type": "array"
                    }
                },
                "required": [
                    "@context",
                    "type",
                    "issuerIdentifier",
                    "issuanceDate",
                    "credentialSubject"
                ],
                "type": "object"
            },
            "VerifiableCredentialRequestWithoutIssuerDto": {
                "properties": {
                    "@context": {
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 999,
                        "type": "array"
                    },
                    "credentialSubject": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Any"
                        },
                        "type": "object"
                    },
                    "expirationDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "holderIdentifier": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "isRevocable": {
                        "type": "boolean"
                    },
                    "issuanceDate": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 999,
                        "type": "array"
                    }
                },
                "required": [
                    "@context",
                    "type",
                    "issuanceDate",
                    "credentialSubject",
                    "holderIdentifier"
                ],
                "type": "object"
            },
            "VerifiablePresentationRequestDto": {
                "properties": {
                    "holderIdentifier": {
                        "type": "string"
                    },
                    "verifiableCredentials": {
                        "items": {
                            "$ref": "#/components/schemas/VerifiableCredentialDto"
                        },
                        "maxItems": 999,
                        "type": "array"
                    }
                },
                "required": [
                    "holderIdentifier",
                    "verifiableCredentials"
                ],
                "type": "object"
            },
            "VerifiablePresentationDto": {
                "properties": {
                    "@context": {
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 999,
                        "type": "array"
                    },
                    "holder": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "proof": {
                        "$ref": "#/components/schemas/LdProofDto"
                    },
                    "type": {
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 999,
                        "type": "array"
                    },
                    "verifiableCredential": {
                        "items": {
                            "$ref": "#/components/schemas/VerifiableCredentialDto"
                        },
                        "maxItems": 999,
                        "type": "array"
                    }
                },
                "required": [
                    "@context",
                    "type"
                ],
                "type": "object"
            },
            "VerifyResponse": {
                "properties": {
                    "error": {
                        "type": "string",
                        "nullable": true
                    },
                    "valid": {
                        "type": "boolean"
                    },
                    "vp": {
                        "$ref": "#/components/schemas/VerifiablePresentationDto"
                    }
                },
                "required": [
                    "valid"
                ],
                "type": "object"
            },
            "ListCredentialRequestData": {
                "properties": {
                    "listId": {
                        "type": "string",
                        "nullable": true
                    },
                    "subject": {
                        "$ref": "#/components/schemas/ListCredentialSubject"
                    }
                },
                "required": [
                    "subject"
                ],
                "type": "object"
            },
            "ListCredentialSubject": {
                "properties": {
                    "credentialId": {
                        "type": "string"
                    },
                    "credentialType": {
                        "type": "string"
                    },
                    "encodedList": {
                        "type": "string"
                    },
                    "statusPurpose": {
                        "type": "string"
                    }
                },
                "required": [
                    "credentialId",
                    "encodedList"
                ],
                "type": "object"
            }
        },
        "securitySchemes": {
            "auth-token": {
                "bearerFormat": "JWT",
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        {
            "Bearer": [ "auth-token" ]
        }
    ],
    "tags": []
}